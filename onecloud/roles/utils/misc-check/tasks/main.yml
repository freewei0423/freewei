---
- name: ansible version
  set_fact:
    supported_ansible_version: "2.9.27"
    minimal_cpu: 4
    minimal_mem: 7

- block:

  - name: test ansible version expecting {{ supported_ansible_version }}, got {{ ansible_version.full }}
    fail:
      msg: "Expected ansible version: {{supported_ansible_version}}. Current ansible version is {{ ansible_version.full }}. Please uninstall the old ansible `yum remove -y ansible` or `pip uninstall ansible`, and install the latest ansible as root: `yum install -y python3-pip; python3 -m pip install --upgrade pip setuptools wheel; python3 -m pip install --upgrade ansible`"

  - meta: end_play

  when: ansible_version.full is version(supported_ansible_version, '<')

- block:

  - name: print hostname msg
    fail:
      msg: "Host name can not contain 'localhost'!"

  - meta: end_play
  when: ansible_hostname | regex_search('^localhost|^\d', ignorecase=True)

- block:
  - name: set fact if ignore resource check
    set_fact:
      ignore_check: "{{ lookup('env', 'IGNORE_ALL_CHECKS') | default('false') | lower}}"

  - name: Check Minimum Hardware Requirements
    assert:
      that:
        - ansible_processor_vcpus >= minimal_cpu
        - (ansible_memtotal_mb / 1024 +0.5) | round(1) | int >= minimal_mem
      msg: |
        cpu: got {{ ansible_processor_vcpus }} (req: {{minimal_cpu}} cores)
        mem: got {{(ansible_memtotal_mb / 1024 +0.5) | round(1) | int}}GB (req: {{minimal_mem}}GB)
        you may export IGNORE_ALL_CHECKS=true in test environment to ignore resource check.
    when:
    - ignore_check != True

- name: assert centos is_centos_based?[{{ is_centos_based }}] distribution version {{ ansible_distribution_version }} is above 7.6
  assert:
    that:
    - "'{{ ansible_distribution_version }}' is version('7.6', '>=')"
    fail_msg: "Cent OS distribution version {{ ansible_distribution_version }} is not supported. It must be above 7.6."
  when:
  - is_centos_based is defined

